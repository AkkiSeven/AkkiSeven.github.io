[{"/Users/akshay/AkkiSeven.github.io/login/src/App.js":"1","/Users/akshay/AkkiSeven.github.io/login/src/reportWebVitals.js":"2","/Users/akshay/AkkiSeven.github.io/login/src/index.js":"3"},{"size":1630,"mtime":1609246764482,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1609133607009,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1609133607009,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"qhc4yx",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/akshay/AkkiSeven.github.io/login/src/App.js",["15"],"import React, { Component } from \"react\"\nimport \"./App.css\";\nimport firebase from \"firebase\"\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAhb6JsLpJ0I5iDwM2fWkfKG--2J3RVMKc\",\n  authDomain: \"my-second-firebase-auth.firebaseapp.com\"\n})\n\nclass App extends Component {\n  state = { isSignedIn: false }\n  uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n      firebase.auth.GithubAuthProvider.PROVIDER_ID,\n      firebase.auth.PhoneAuthProvider.PROVIDER_ID,\n      firebase.auth.EmailAuthProvider.PROVIDER_ID\n    ],\n    callbacks: {\n      signInSuccess: () => false\n    }\n  }\n\n  componentDidMount = () => {\n    firebase.auth().onAuthStateChanged(user => {\n      this.setState({ isSignedIn: !!user })\n    })\n  }\n\n  \n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.isSignedIn ? (\n          <span>\n            <div className=\"loggedin\">Signed In!</div>\n            <button className=\"signout\" onClick={() => firebase.auth().signOut()}>Sign out</button>\n            <h1>Welcome {firebase.auth().currentUser.displayName}</h1>\n          {firebase.auth().currentUser.photoURL ? (\n            <img className=\"profilepic\" alt=\"profile picture\" src={firebase.auth().currentUser.photoURL}></img>\n          ) : (<></>)}\n          </span>\n        ) : (\n            <StyledFirebaseAuth\n              uiConfig={this.uiConfig}\n              firebaseAuth={firebase.auth()}\n            />\n          )}\n      </div>\n    )\n  }\n}\n\nexport default App\n","/Users/akshay/AkkiSeven.github.io/login/src/reportWebVitals.js",[],"/Users/akshay/AkkiSeven.github.io/login/src/index.js",[],{"ruleId":"16","severity":1,"message":"17","line":44,"column":13,"nodeType":"18","endLine":44,"endColumn":106},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]